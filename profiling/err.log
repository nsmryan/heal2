heal-0.1.0.0: build
Preprocessing library heal-0.1.0.0...
Preprocessing executable 'heal-exe' for heal-0.1.0.0...
[6 of 6] Compiling Main             ( src/Main.hs, .stack-work/dist/x86_64-linux/Cabal-1.24.2.0/build/heal-exe/heal-exe-tmp/Main.p_o )

/home/noah/Documents/heal/src/Main.hs:111:3: error:
    • No instance for (Show
                         (VU.MVector ghc-prim-0.5.0.0:GHC.Prim.RealWorld Bool))
        arising from a use of ‘print’
    • In a stmt of a 'do' block:
        print $ F.maximumBy (compare `on` snd) p'
      In the expression:
        do { config <- execParser
                       $ info
                           (cmdArgs <**> helper)
                           (fullDesc
                            <>
                              progDesc "Run a genetic algorithm"
                              <> header "a functional genetic algorithm program");
             p <- runWithCreate
                  $ Poly.standardGeneticAlgorithm
                      (gaConfigPm config)
                      (gaConfigPc config)
                      (gaConfigIs config)
                      (gaConfigPs config)
                      (gaConfigGens config)
                      polypop
                      polyFitness;
             print $ F.maximumBy (compare `on` snd) $ evaluation polyFitness p;
             p <- runWithCreate
                  $ Mono.standardGeneticAlgorithm
                      (gaConfigPm config)
                      (gaConfigPc config)
                      (gaConfigIs config)
                      (gaConfigPs config)
                      (gaConfigGens config)
                      monomorphicPopulation
                      monoFitness;
             .... }
      In an equation for ‘main’:
          main
            = do { config <- execParser
                             $ info
                                 (cmdArgs <**> helper)
                                 (fullDesc
                                  <>
                                    progDesc "Run a genetic algorithm"
                                    <> header "a functional genetic algorithm program");
                   p <- runWithCreate
                        $ Poly.standardGeneticAlgorithm
                            (gaConfigPm config)
                            (gaConfigPc config)
                            (gaConfigIs config)
                            (gaConfigPs config)
                            (gaConfigGens config)
                            polypop
                            polyFitness;
                   print $ F.maximumBy (compare `on` snd) $ evaluation polyFitness p;
                   .... }

If the above build failed with a linker error or .so/DLL error, addressing these may help:
Warning: modules not listed in heal.cabal for 'heal-exe' component (add to other-modules):
    Heal.Monomorphic
    Heal.Mutable
    Heal.Polymorphic
    Heal.Scope
    Heal.Utilities

--  While building package heal-0.1.0.0 using:
      /home/noah/.stack/setup-exe-cache/x86_64-linux/setup-Simple-Cabal-1.24.2.0-ghc-8.0.1 --builddir=.stack-work/dist/x86_64-linux/Cabal-1.24.2.0 build lib:heal exe:heal-exe --ghc-options " -ddump-hi -ddump-to-file"
    Process exited with code: ExitFailure 1
